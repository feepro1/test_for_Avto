version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    networks:
      - app-network
    depends_on:
      - db_postgresql
    environment:
      - APP_ENV=dev
      - DATABASE_URL_PGSQL=pgsql://postgres:postgres@db_postgresql:5432/db
    command: >
      sh -c "
        php bin/console doctrine:migrations:migrate --no-interaction &&
        php bin/console doctrine:fixtures:load --no-interaction &&
        php-fpm
      "

  db_postgresql:
    container_name: db_postgresql
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - app-network

  web:
    image: nginx:latest
    container_name: nginx_web
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - .:/var/www/html
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - app

#   PHP testing service
  phpunit:
    image: php:7.4-cli
    container_name: phpunit
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "./vendor/bin/phpunit" ]

  # PHP static analysis (Psalm)
  psalm:
    image: php:7.4-cli
    container_name: psalm
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "./vendor/bin/psalm" ]

networks:
  app-network:
    driver: bridge

volumes:
  db_postgresql_data:
